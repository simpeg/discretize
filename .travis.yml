# Configuration file for TravisCI

# We use miniconda for Python so don't need any Python specific tools
language: generic

# language: python
# python:
# - 2.7
# - 3.6
# - 3.7

sudo: false

env:
  global:
    - MASTER_BRANCH=master
    - PYPI_PY=3.7  # deploy to pypi from python 3.6
    - GAE_PROJECT=discretize  # name of the google app engine project
    - TEST=false
    - TEST_DIR=""
    - DEPLOY_DOCS=false
    - DEPLOY_PYPI=false
    - CONDA_REQUIREMENTS="numpy scipy matplotlib cython properties[math]"
    - CONDA_REQUIREMENTS_DEV=requirements_dev.txt

matrix:
  include:
    # test the base code on 2.7, 3.6, 3.7
    - name: "Python 2.7 - base"
      os: linux
      env:
        - PYTHON=2.7
        - TEST=true
        - TEST_DIR="tests/base"
    - name: "Python 3.6 - base"
      os: linux
      env:
        - PYTHON=3.6
        - TEST=true
        - TEST_DIR="tests/base"
    - name: "Python 3.7 - base"
      os: linux
      env:
        - PYTHON=3.7
        - TEST=true
        - TEST_DIR="tests/base"

    # test the cyl code on 2.7, 3.6, 3.7
    - name: "Python 2.7 - cyl"
      os: linux
      env:
        - PYTHON=2.7
        - TEST=true
        - TEST_DIR="tests/cyl"
    - name: "Python 3.6 - cyl"
      os: linux
      env:
        - PYTHON=3.6
        - TEST=true
        - TEST_DIR="tests/cyl"
    - name: "Python 3.7 - cyl"
      os: linux
      env:
        - PYTHON=3.7
        - TEST=true
        - TEST_DIR="tests/cyl"

    # test the cyl code on 2.7, 3.6, 3.7
    - name: "Python 2.7 - tree"
      os: linux
      env:
        - PYTHON=2.7
        - TEST=true
        - TEST_DIR="tests/tree"
        - DEPLOY_PYPI=true
    - name: "Python 3.6 - tree"
      os: linux
      env:
        - PYTHON=3.6
        - TEST=true
        - TEST_DIR="tests/tree"
        - DEPLOY_PYPI=true
    - name: "Python 3.7 - tree"
      os: linux
      env:
        - PYTHON=3.7
        - TEST=true
        - TEST_DIR="tests/tree"
        - DEPLOY_PYPI=true

    # test the docs code on 2.7, 3.6, 3.7
    - name: "Python 2.7 - docs"
      os: linux
      env:
        - PYTHON=2.7
        - TEST=true
        - TEST_DIR="tests/docs"
    - name: "Python 3.6 - docs"
      os: linux
      env:
        - PYTHON=3.6
        - TEST=true
        - TEST_DIR="tests/docs"
    - name: "Python 3.7 - docs"
      os: linux
      env:
        - PYTHON=3.7
        - TEST=true
        - TEST_DIR="tests/docs"
        - DEPLOY_DOCS="true"

before_install:
  - source ci/setup-miniconda.sh
  - conda list

install:
  - pip install -e .
  - make build

script:
  - if [ "$TEST" == "true"]; then
      pytest $TEST_DIR --cov=discretize --cov-config .coveragerc -v -s
    fi

# before_install:
#   - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then
#       wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
#     else
#       wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
#     fi
#   - chmod +x miniconda.sh
#   - ./miniconda.sh -b -p $HOME/miniconda
#   - export PATH=/home/travis/anaconda/bin:/home/travis/miniconda/bin:$PATH
#   - conda update --yes conda

# install:
#   - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then
#       echo "Using native pip to install dependencies"
#     else
#       conda install --quiet --yes pip python=$TRAVIS_PYTHON_VERSION numpy scipy matplotlib pillow cython ipython;
#     fi
#   - conda install --quiet --yes -c menpo vtk
#   - which pip
#   - pip install --upgrade pip
#   - pip install -r requirements_dev.txt
#   - python --version
#   - pip install -e .
#   - make build
#   - export MPLBACKEND="agg"

# script:
#   - pytest $TEST_DIR --cov=discretize --cov-config .coveragerc -v -s;

# after_success:

#   - bash <(curl -s https://codecov.io/bash)

#   # early exit if not on a deplotment branch
#   - if ! [ "$TRAVIS_BRANCH" = "$MASTER_BRANCH" -o "$TRAVIS_TAG" = "true" ]; then
#       echo "Not deploying (because this is not a deployment branch)" ;
#       exit 0 ;
#     fi
#   - if ! [ $TRAVIS_PULL_REQUEST = "false" ] ; then
#       echo "Not deploying (because this is a pull request)" ;
#       exit 0 ;
#     fi
#   - echo "Deploying"

#   # unpack credentials
#   - openssl aes-256-cbc -K $encrypted_5813a1339455_key -iv $encrypted_5813a1339455_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d
#   - tar -xvzf credentials.tar.gz

#   # deploy to pypi
#   - mv credentials/.pypirc ~/.pypirc ;
#   - python setup.py sdist ;
#   - twine upload dist/* --skip-existing ;

# deploy:
#   - provider: script
#     script: ci/deploy-docs.sh
#     on:
#       condition: '$TEST_DIR == "tests/docs"'

notifications:
  slack: simpeg:1KZq5giMtlJJ58TijIPgqf7n
  email: False
