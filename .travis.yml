# Configuration file for TravisCI
dist: xenial # must use xenial for pyvista

# We use miniconda for Python so don't need any Python specific tools
language: generic

sudo: false

env:
  global:
    - MASTER_BRANCH=master
    - TEST=false
    - TEST_DIR=""
    - DEPLOY_PYPI=false
    - CONDA_REQUIREMENTS="numpy scipy matplotlib cython pip"
    - PYPI_REQUIREMENTS=requirements.txt
    - PYPI_REQUIREMENTS_DEV=requirements_dev.txt
    # Doctr deploy key for simpeg/discretize-docs
    - secure: "JPcVPkWq1uzcgwM8U41LyxdWlA3LehTdGnU1NxZUd1y+GSZgn2s84ByJ1WZ8Dp4RJFjPLO7WX79qJkKRQUOVTs2teqTlvDkcMF6WM41k5u4N9aJLtIZLwZ8SrBoU6FAWge1CsXYfWE7SpILH9riYuawC6nOEwf5pdrTcoKLUdaaF0bHBbRZMXy3vk8UTF/2eDQa0cpMw1zJUryDrh+btpMvncbTqBtpQgAYPdjfbYr8EM+/b23dqMMUtM1KmebllWDtESzz+Pf/K2wOTweMlWVITHs5hywlGAGHAeusAKIRE8x1uB8U7abAM3iOEZ2WQqgquLvahpoiRFofmAHij1jpT1k45OM83D2skjDRuOg5b5zEHivsygfUtp2F2AAKRfHAtBxK664aFvR0l5YNKYqqJxR+ACpR/yhlWroMgeIX8srpCl/oT365sahWRb7wn/OI/f01S9Chn9x6fQXq7gYozAwC0RTD4Y9zpLHhnEiuTPbiLXCyLj3cexgxqAkk71NKhLce1KYjOyzuROQsT+1H91CMsmRDG34VHWdGXhVmucNG0JrQmzVaSiwhOig/4JxtHcj+qPFSHZ6O5QqdswcW+ukWyUohIQJC6quE27Yh+gKC7sujBTQkiyY/YO4MHK7q/LsB1n95BGZCftkT/bKitGsPgO/LFZmyl5ijVm+s="

matrix:
  include:
    # test the base code on 2.7, 3.6, 3.7
    - name: "Python 2.7 - base"
      os: linux
      env:
        - PYTHON=2.7
        - TEST=true
        - TEST_DIR="tests/base"
    - name: "Python 3.6 - base"
      os: linux
      env:
        - PYTHON=3.6
        - TEST=true
        - TEST_DIR="tests/base"
    - name: "Python 3.7 - base"
      os: linux
      env:
        - PYTHON=3.7
        - TEST=true
        - TEST_DIR="tests/base"

    # test the cyl code on 2.7, 3.6, 3.7
    - name: "Python 2.7 - cyl"
      os: linux
      env:
        - PYTHON=2.7
        - TEST=true
        - TEST_DIR="tests/cyl"
    - name: "Python 3.6 - cyl"
      os: linux
      env:
        - PYTHON=3.6
        - TEST=true
        - TEST_DIR="tests/cyl"
    - name: "Python 3.7 - cyl"
      os: linux
      env:
        - PYTHON=3.7
        - TEST=true
        - TEST_DIR="tests/cyl"

    # test the cyl code on 2.7, 3.6, 3.7
    - name: "Python 2.7 - tree"
      os: linux
      env:
        - PYTHON=2.7
        - TEST=true
        - TEST_DIR="tests/tree"
        - DEPLOY_PYPI=true
        - CONDA_INSTALL_EXTRA="twine"
    - name: "Python 3.6 - tree"
      os: linux
      env:
        - PYTHON=3.6
        - TEST=true
        - TEST_DIR="tests/tree"
        - DEPLOY_PYPI=true
        - CONDA_INSTALL_EXTRA="twine"
    - name: "Python 3.7 - tree"
      os: linux
      env:
        - PYTHON=3.7
        - TEST=true
        - TEST_DIR="tests/tree"
        - DEPLOY_PYPI=true
        - CONDA_INSTALL_EXTRA="twine"

    # test the docs code on 3.6, 3.7
    - name: "Python 3.6 - docs"
      os: linux
      env:
        - PYTHON=3.6
        - TEST=true
        - TEST_DIR="tests/docs"
    # ... and delploy the docs on 3.7
    - name: "Python 3.7 - docs"
      os: linux
      env:
        - PYTHON=3.7
        - TEST=true
        - TEST_DIR="tests/docs"
        - DEPLOY_DOCS=true

before_install:
  - source ci/setup-miniconda.sh
  - conda list
  # configure a headless display for pyvista
  - git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
  - source ./gl-ci-helpers/travis/setup_headless_display.sh

install:
  - pip install -e .
  - make build

script:
  - if [ "$TEST" == "true" ]; then
      export MPLBACKEND="agg" ;
      echo "testing $TEST_DIR" ;
      pytest $TEST_DIR --cov-config .coveragerc --cov=discretize -v -s ;
    fi

after_success:
  - if [ "$TEST" == "true" ]; then
      echo "Uploading coverage to Codecov";
      codecov;
    fi
  - if [ ("$DEPLOY_DOCS" == "true") && ($TRAVIS_PYTHON_VERSION == 3.7) && ($TRAVIS_REPO_SLUG == 'simpeg/discretize') && ($TRAVIS_BRANCH == 'master') && ($DOCS_TRIGGER == 'BANE_RULES')]; then
      pip install doctr ;
      export MPLBACKEND="agg" ;
      echo "Delpoying docs" ;
      set -e ;
      cd docs/ ;
      make html ;
      cd .. ;
      doctr deploy --built-docs ./docs/_build/html/ --deploy-repo simpeg/discretize-docs ./en/master/ ;
    fi


deploy:
  # pypi release
  - provider: script
    script: sh ci/deploy-pypi.sh
    skip_cleanup: true
    on:
      tags: true
      condition: '$DEPLOY_PYPI == "true"'

notifications:
  slack: simpeg:1KZq5giMtlJJ58TijIPgqf7n
  email: false
