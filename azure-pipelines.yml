trigger:
  branches:
    include:
    - '*'
    exclude:
    - '*no-ci*'
  tags:
    include:
    - '*'

pr:
  branches:
    include:
    - '*'
    exclude:
    - '*no-ci*'

stages:
- stage: Testing
  jobs:
    - template: ./.azure-pipelines/azure-pipelines-linux.yml
    - template: ./.azure-pipelines/azure-pipelines-osx.yml
    - template: ./.azure-pipelines/azure-pipelines-win.yml

- stage: Deploy
  condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/'))
  jobs:
    - job:
      displayName: Deploy Docs and source
      pool:
        vmImage: ubuntu-latest
      variables:
        DISPLAY: ':99.0'
        PYVISTA_OFF_SCREEN: 'True'
      steps:
        - script: |
            git config --global user.name ${GH_NAME}
            git config --global user.email ${GH_EMAIL}
            git config --list | grep user.
          displayName: 'Configure git'
          env:
            GH_NAME: $(gh.name)
            GH_EMAIL: $(gh.email)
        - script: echo '##vso[task.prependpath]$CONDA/bin'
          displayName: Add conda to PATH
        - script: |
            conda create --yes --quiet --name test python=$(python.version)
            eval "$(conda shell.bash hook)"
            conda activate test
            conda env list
            conda install --yes --quiet -c conda-forge numpy scipy matplotlib cython vtk properties vectormath pyvista graphviz
            pip install -r requirements_dev.txt
            pip install .
          displayName: building and installing deps
        - script: |
            eval "$(conda shell.bash hook)"
            conda activate test
            .ci/setup_headless_display.sh
            cd docs
            make html
            cd ..
          displayName: Building documentation
        # upload documentation to discretize-docs gh-pages on tags
        - script: |
            git clone --depth 1 https://${GH_TOKEN}@github.com/simpeg/discretize-docs.git
            cd discretize-docs
            git gc --prune=now
            git remote prune origin
            rm -rf en/main/*
            cp -r $BUILD_SOURCESDIRECTORY/docs/_build/html/* en/main/
            touch .nojekyll
            git add .
            git commit -am "Azure CI commit ref $(Build.SourceVersion)"
            git push
          displayName: Push documentation to discretize-docs
          env:
            GH_TOKEN: $(gh.token)
        - script: |
            eval "$(conda shell.bash hook)"
            conda activate test
            python setup.py sdist
            twine upload --skip-existing dist/*
          displayName: Deploy source
          env:
            TWINE_USERNAME: $(twine.username)
            TWINE_PASSWORD: $(twine.password)

    - job:
      displayName: Windows Wheels
      strategy:
        matrix:
          win-Python36:
            python.version: '3.6'
          win-Python37:
            python.version: '3.7'
          win-Python38:
            python.version: '3.8'
          win-Python39:
            python.version: '3.9'
      pool:
        vmImage: vs2017-win2016
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(python.version)'
        - script: pip install numpy cython twine wheel
          displayName: Install build dependencies
        - script: python setup.py bdist_wheel
          displayName: Build Wheel
        - script: twine upload --skip-existing dist/*
          displayName: Upload to PYPI
          env:
            TWINE_USERNAME: $(twine.username)
            TWINE_PASSWORD: $(twine.password)
